<과제 프로젝트 가이드>
- group id : dw
- artifact id : wholesale_company
- 데이터베이스 : wholesale_company

- 모델 엔티티 구성
  Customer.java  (고객) : customerId, customerName, customerEmployee, employeeTitle,
 		address, city, area, phoneNumber, mileage
  Department.java  (부서) : departId, departName
  Employee.java  (사원) : employeeId, name, englishName, position, gender, birthDate,
 		hireDate, address, city, area, telephoneNo, managerId, department
  Mileage.java  (마일리지등급) : mileageGrade, lowLimit, highLimit
  Order.java  (주문) : orderId, customer, employee, orderDate, requestDate, shippingDate
  OrderDetail.java  (주문세부) : orderDetailId, order, product, unitPrice, orderQuantity,
 		discountRate
  Product.java  (제품) : productId, productName, pkgUnit, unitPrice, inventory

  ** OrderDetail 엔티티의 경우, 아래 필드를 primary key로 추가해야 함.
  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  @Column(name="주문세부번호")
  private long orderDetailId;

  *** 위의 엔티티를 외래키를 고려하여 JPA에 맞게 구성해야 함
  JPA에 의해 자동으로 테이블로 생성된 후, 첨부한 csv 파일로 import data 수행
  사원_202404182300.csv 를 임포트할때 에러가 발생하는데 skip으로 넘기면 됨








- Rest API (각 엔티티(=테이블)마다 전체 데이터를 read 하는 역할의 메서드 생성)
  CustomerController : @GetMapping("/customers")
  DepartmentController : @GetMapping("/departments")
  EmployeeController : @GetMapping("/employees")
  MileageController : @GetMapping("/mileages")
  OrderController : @GetMapping("/orders")
  OrderDetailController : @GetMapping("/orderdetails")
  ProductController : @GetMapping("/products")

- exception 패키지 생성 필수
  : ResourceNotFoundException


-추가문제-
1. 주문일이 2021년 5월 1일 이후인 주문 정보 얻기

2. 제품의 재고가 50개 미만인 제품 정보 얻기

3. 사원의 직위가 '사원'인 사람들 중에서 가장 최근에 입사한 사원의 정보

4. 고객 전체의 평균마일리지보다 평균마일리지가 큰 고객 정보

-4024 문제-
1. 제품 중에 제품명에 '주스'가 들어간 제품에 대한 모든 정보를 검색하시오.
+제품명을 매개변수로 받아서 처리하는 것도 구현해보기

2. 제품 단가가 5,000원 이상 10,000원 이하인 제품에는 무엇이 있는지 검색하시오.
+lowLimit 와 highLimit 으로 매수변수 처리하는 것도 구현해보세요~

3.2020년 4월 9일에 주문한 고객의 모든 정보를 보이시오.
+날짜를 매개변수로 처리

4.제품 제품번호가 1,2,4,7,11,20인 제품의 모든 정보를 보이시오. (배열로 여러개의 제품을 보이게하고싶다.)
포스트맨에서 배열형태로 요청함
본문에 [1,2,4,7,11,20] 형태로 요청  (for문사용)

5. 제품 재고금액이 높은 상위 10개 제품(shot가 편하겠죠?)
(재고금액 = 단가(unitPrice) * 재고수량(imventory))


6. 마일리지 등급명별로 고객수를 보이시오.
public List<Customer> getCustomerByMileageGrade(String grade);






